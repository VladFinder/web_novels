{"version":3,"file":"app.bd0aa83f81c718f0.js","mappings":"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","sources":["webpack://web_novels/./src/App.vue","webpack://web_novels/./src/components/LoadingScreen.vue","webpack://web_novels/./src/components/LoadingScreen.vue?f185","webpack://web_novels/./src/components/EmotionSelect.vue","webpack://web_novels/./src/services/jsonStorageService.js","webpack://web_novels/./src/utils/telegram.js","webpack://web_novels/./src/components/EmotionSelect.vue?7054","webpack://web_novels/./src/components/MainScreen.vue","webpack://web_novels/./src/services/firebase.js","webpack://web_novels/./src/services/dbService.js","webpack://web_novels/./src/components/MainScreen.vue?8f35","webpack://web_novels/./src/components/CalendarScreen.vue","webpack://web_novels/./src/components/CalendarScreen.vue?1940","webpack://web_novels/./src/App.vue?7ccd","webpack://web_novels/./src/main.js","webpack://web_novels/webpack/bootstrap","webpack://web_novels/webpack/runtime/chunk loaded","webpack://web_novels/webpack/runtime/define property getters","webpack://web_novels/webpack/runtime/global","webpack://web_novels/webpack/runtime/hasOwnProperty shorthand","webpack://web_novels/webpack/runtime/publicPath","webpack://web_novels/webpack/runtime/jsonp chunk loading","webpack://web_novels/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <LoadingScreen v-if=\"currentScreen === 'loading'\" />\n    <EmotionSelect v-else-if=\"currentScreen === 'emotion'\" @emotion-selected=\"handleEmotionSelect\" @navigate=\"handleNavigate\" />\n    <MainScreen\n      v-else-if=\"currentScreen === 'main'\"\n      @open-settings=\"openSettings\"\n      @open-calendar=\"openCalendar\"\n    />\n    <CalendarScreen v-else-if=\"currentScreen === 'calendar'\" @back=\"backToMain\" />\n  </div>\n</template>\n\n<script>\nimport LoadingScreen from './components/LoadingScreen.vue'\nimport EmotionSelect from './components/EmotionSelect.vue'\nimport MainScreen from './components/MainScreen.vue'\nimport CalendarScreen from './components/CalendarScreen.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    LoadingScreen,\n    EmotionSelect,\n    MainScreen,\n    CalendarScreen\n  },\n  data() {\n    return {\n      currentScreen: 'loading',\n      selectedEmotion: null,\n      showSettings: false\n    }\n  },\n  methods: {\n    handleEmotionSelect(emotionId) {\n      this.selectedEmotion = emotionId;\n      this.currentScreen = 'main';\n    },\n    handleNavigate(screen) {\n      this.currentScreen = screen;\n    },\n    openSettings() {\n      this.showSettings = true;\n    },\n    openCalendar() {\n      this.currentScreen = 'calendar';\n    },\n    backToMain() {\n      this.currentScreen = 'main';\n    }\n  },\n  mounted() {\n    setTimeout(() => {\n      this.currentScreen = 'emotion'\n    }, 2000)\n  }\n}\n</script>\n\n<style>\n* {\n  font-family: 'Mulish', sans-serif;\n}\n\nhtml, body, #app {\n  /* width: 100%; */\n  height: 100%;\n  overflow-x: hidden; /* только горизонтальный скролл запрещён */\n  position: static;\n  overscroll-behavior: auto;\n  touch-action: auto;\n  margin: 0;\n}\n\n#app {\n  text-align: center;\n}\n\n.content {\n  margin: 20px;\n  padding: 20px;\n  border: 2px solid #42b983;\n}\n\nh1 {\n  margin: 20px;\n  padding: 20px;\n  /* border: 2px solid #42b983; */\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n.header {\n  background-color: #f8f9fa;\n  padding: 20px;\n  margin-bottom: 20px;\n}\n\n.telegram-app {\n  max-width: 100%;\n  min-height: 100vh;\n  padding: 0;\n  margin: 0;\n}\n</style>\n","<template>\n  <div class=\"loading-screen\">\n    <div class=\"loading-content\">\n      <img src=\"../assets/logo.png\" alt=\"Logo\" class=\"logo\">\n      <p class=\"loading-text\">Загрузка...</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'LoadingScreen'\n}\n</script>\n\n<style scoped>\n.loading-screen {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  background: radial-gradient(48.34% 48.34% at 50% 51.66%, #DAF8FF 29.33%, #F2C0FF 75%, #FB8DFF 100%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.loading-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n}\n\n.logo {\n  width: 360px;\n  height: auto;\n}\n\n.loading-text {\n  font-family: 'Mulish', sans-serif;\n  font-size: 24px;\n  color: #333;\n  font-weight: 500;\n}\n</style>\n","import { render } from \"./LoadingScreen.vue?vue&type=template&id=4f683444&scoped=true\"\nimport script from \"./LoadingScreen.vue?vue&type=script&lang=js\"\nexport * from \"./LoadingScreen.vue?vue&type=script&lang=js\"\n\nimport \"./LoadingScreen.vue?vue&type=style&index=0&id=4f683444&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4f683444\"]])\n\nexport default __exports__","<template>\n  <div v-if=\"!emotionAlreadySelected\" class=\"emotion-select\">\n    <h1 class=\"title\">Как ты себя чувствуешь?</h1>\n    <div class=\"glass-container\">\n      <div v-if=\"isLoading\" class=\"loading-overlay\">\n        <div class=\"loading-spinner\"></div>\n        <p>Сохраняем эмоцию...</p>\n      </div>\n      <div class=\"emotions-grid\">\n        <div v-for=\"emotion in emotions\" \n             :key=\"emotion.id\" \n             class=\"emotion-item\"\n             :class=\"{ 'disabled': isLoading }\"\n             @click=\"selectEmotion(emotion.id)\">\n          <img :src=\"emotion.icon\" :alt=\"emotion.name\">\n          <span class=\"emotion-name\">{{ emotion.name }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div v-else class=\"emotion-already-selected\">\n    <div class=\"selected-emotion-card\">\n      <h2>Сегодня ты уже выбрал эмоцию</h2>\n      <div class=\"selected-emotion\">\n        <img :src=\"getSelectedEmotionIcon()\" :alt=\"getSelectedEmotionName()\" class=\"emotion-icon-large\">\n        <p class=\"emotion-name\">{{ getSelectedEmotionName() }}</p>\n      </div>\n      <p class=\"message\">Завтра сможешь выбрать новую эмоцию!</p>\n      <div class=\"buttons-container\">\n        <button @click=\"goToCalendar\" class=\"calendar-btn\">Посмотреть календарь</button>\n        <button @click=\"goToMain\" class=\"close-btn\">Закрыть</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { jsonStorageService } from '../services/jsonStorageService'\nimport { getTelegramUserId } from '../utils/telegram'\n\nexport default {\n  name: 'EmotionSelect',\n  data() {\n    return {\n      telegramId: null,\n      telegramUsername: null,\n      isLoading: false,\n      emotionAlreadySelected: false,\n      selectedEmotion: null,\n      emotions: [\n        { id: 1, name: 'Радостно', icon: require('../assets/emotions/Радость.png') },\n        { id: 2, name: 'Грустно', icon: require('../assets/emotions/Грусть.png') },\n        { id: 3, name: 'Спокойно', icon: require('../assets/emotions/Спокойно.png') },\n        { id: 4, name: 'Тревожно', icon: require('../assets/emotions/Тревога.png') },\n        { id: 5, name: 'Раздражённо', icon: require('../assets/emotions/Раздражение.png') },\n        { id: 6, name: 'Мечтательно', icon: require('../assets/emotions/Мечтательность.png') }\n      ]\n    }\n  },\n  async mounted() {\n    console.log('🔍 EmotionSelect mounted');\n    console.log('🔍 Telegram WebApp:', window.Telegram?.WebApp);\n    console.log('🔍 Telegram user:', window.Telegram?.WebApp?.initDataUnsafe?.user);\n    \n    this.telegramId = getTelegramUserId()\n    this.telegramUsername = this.getTelegramUsername()\n    \n    console.log('🔍 Telegram ID:', this.telegramId);\n    console.log('🔍 Telegram Username:', this.telegramUsername);\n    \n    if (!this.telegramId) {\n      console.warn('⚠️ Telegram ID not found');\n      // Для отладки используем тестовый ID\n      this.telegramId = 'debug_user_' + Date.now();\n      console.log('🔍 Using debug Telegram ID:', this.telegramId);\n    }\n    \n    // Проверяем, была ли уже сохранена эмоция на сегодня\n    console.log('🔍 Checking if emotion already selected for today...');\n    this.emotionAlreadySelected = await jsonStorageService.hasEmotionToday(this.telegramId)\n    console.log('🔍 Emotion already selected:', this.emotionAlreadySelected);\n    \n    if (this.emotionAlreadySelected) {\n      // Получаем выбранную эмоцию\n      const today = new Date().toISOString().split('T')[0]\n      this.selectedEmotion = await jsonStorageService.getEmotionByDate(this.telegramId, today)\n      console.log('🔍 Selected emotion:', this.selectedEmotion);\n    }\n  },\n  methods: {\n    getTelegramUsername() {\n      return window.Telegram?.WebApp?.initDataUnsafe?.user?.username || \n             window.Telegram?.WebApp?.initDataUnsafe?.user?.first_name || \n             'Пользователь'\n    },\n    \n    async selectEmotion(id) {\n      console.log('🔍 selectEmotion called with id:', id);\n      console.log('🔍 Current state:', {\n        isLoading: this.isLoading,\n        telegramId: this.telegramId,\n        telegramUsername: this.telegramUsername\n      });\n      \n      if (this.isLoading) {\n        console.log('🔍 Already loading, ignoring click');\n        return; // Предотвращаем множественные клики\n      }\n      \n      this.isLoading = true;\n      console.log('🔍 Set loading to true');\n      \n      try {\n        let telegramId = getTelegramUserId();\n        console.log('🔍 Got Telegram ID from function:', telegramId);\n        \n        if (!telegramId) {\n          console.warn('⚠️ Telegram ID not found in function');\n          // Используем ID из компонента\n          telegramId = this.telegramId;\n          console.log('🔍 Using Telegram ID from component:', telegramId);\n        }\n        \n        const note = '';\n        const timestamp = new Date().toISOString();\n        \n        const emotionData = {\n          telegramId,\n          telegramUsername: this.telegramUsername,\n          emotion: id, \n          note, \n          timestamp \n        };\n        \n        console.log('🔍 Saving emotion data:', emotionData);\n        \n        const result = await jsonStorageService.saveEmotion(telegramId, {\n          emotion: id,\n          note,\n          timestamp,\n          username: this.telegramUsername\n        });\n        \n        console.log('✅ Emotion successfully saved:', result);\n        this.emotionAlreadySelected = true;\n        this.selectedEmotion = { emotion: id, note, timestamp, username: this.telegramUsername };\n        this.$emit('emotion-selected', id);\n        \n      } catch (error) {\n        console.error('❌ Error saving emotion:', error);\n        console.error('❌ Error details:', {\n          name: error.name,\n          message: error.message,\n          stack: error.stack\n        });\n        \n        // Проверяем, если это ошибка о том, что эмоция уже сохранена\n        if (error.message.includes('Эмоция на сегодня уже сохранена')) {\n          console.log('🔍 Emotion already saved, updating component state');\n          // Обновляем состояние компонента\n          this.emotionAlreadySelected = true;\n          // Получаем сохраненную эмоцию\n          const today = new Date().toISOString().split('T')[0];\n          this.selectedEmotion = await jsonStorageService.getEmotionByDate(telegramId, today);\n          alert('Эмоция на сегодня уже сохранена. Завтра сможете выбрать новую эмоцию!');\n        } else {\n          alert(`Ошибка сохранения эмоции: ${error.message}`);\n        }\n      } finally {\n        console.log('🔍 Set loading to false');\n        this.isLoading = false;\n      }\n    },\n    \n    getSelectedEmotionIcon() {\n      if (!this.selectedEmotion) return '';\n      const emotion = this.emotions.find(e => e.id === this.selectedEmotion.emotion);\n      return emotion ? emotion.icon : '';\n    },\n    \n    getSelectedEmotionName() {\n      if (!this.selectedEmotion) return '';\n      const emotion = this.emotions.find(e => e.id === this.selectedEmotion.emotion);\n      return emotion ? emotion.name : '';\n    },\n    \n    goToCalendar() {\n      this.$emit('navigate', 'calendar');\n    },\n    \n    goToMain() {\n      this.$emit('navigate', 'main');\n    }\n  }\n}\n</script>\n\n<style scoped>\n.emotion-select {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  background: radial-gradient(48.34% 48.34% at 50% 51.66%, #DAF8FF 29.33%, #F2C0FF 75%, #FB8DFF 100%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n}\n\n.title {\n  font-family: 'Mulish', sans-serif;\n  font-size: 40px;\n  color: #333;\n  margin-bottom: 40px;\n  font-weight: 100;\n}\n\n.glass-container {\n  background: rgba(255, 255, 255, 0.2);\n  backdrop-filter: blur(20px);\n  border-radius: 24px;\n  padding: 40px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  width: 75%;\n  max-width: 800px;\n}\n\n.emotions-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(115px, 6fr));\n  gap: 5vw;\n  place-items: center;\n}\n\n.emotion-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n  cursor: pointer;\n  transition: transform 0.2s;\n}\n\n.emotion-item:hover {\n  transform: scale(1.05);\n}\n\n.emotion-item img {\n  width: 35vw;\n  max-width: 170px;\n  min-width: 80px;\n  height: 25vw;\n  max-height: 140px;\n  min-height: 64px;\n  object-fit: cover;\n  border-radius: 16px;\n  overflow: visible;\n}\n\n.emotion-name {\n  font-family: 'Mulish', sans-serif;\n  font-size: 18px;\n  color: #333;\n}\n\n/* Стили для экрана уже выбранной эмоции */\n.emotion-already-selected {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  background: radial-gradient(48.34% 48.34% at 50% 51.66%, #DAF8FF 29.33%, #F2C0FF 75%, #FB8DFF 100%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n}\n\n.selected-emotion-card {\n  background: rgba(255, 255, 255, 0.2);\n  backdrop-filter: blur(20px);\n  border-radius: 24px;\n  padding: 40px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  text-align: center;\n  max-width: 400px;\n  width: 90%;\n}\n\n.selected-emotion-card h2 {\n  font-family: 'Mulish', sans-serif;\n  font-size: 24px;\n  color: #333;\n  margin-bottom: 30px;\n  font-weight: 100;\n}\n\n.selected-emotion {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 30px;\n}\n\n.emotion-icon-large {\n  width: 120px;\n  height: 120px;\n  border-radius: 20px;\n  object-fit: cover;\n  margin-bottom: 15px;\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);\n}\n\n.selected-emotion .emotion-name {\n  font-size: 24px;\n  font-weight: bold;\n  color: #333;\n  font-family: 'Mulish', sans-serif;\n}\n\n.message {\n  font-family: 'Mulish', sans-serif;\n  font-size: 16px;\n  color: #666;\n  margin-bottom: 30px;\n  line-height: 1.5;\n}\n\n.buttons-container {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  flex-wrap: wrap;\n}\n\n.calendar-btn {\n  background: linear-gradient(135deg, #667eea, #764ba2);\n  color: white;\n  border: none;\n  padding: 15px 30px;\n  border-radius: 25px;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: bold;\n  font-family: 'Mulish', sans-serif;\n  transition: all 0.2s;\n  box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);\n}\n\n.calendar-btn:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);\n}\n\n.close-btn {\n  background: rgba(255, 255, 255, 0.3);\n  color: #333;\n  border: 2px solid rgba(255, 255, 255, 0.5);\n  padding: 15px 30px;\n  border-radius: 25px;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: bold;\n  font-family: 'Mulish', sans-serif;\n  transition: all 0.2s;\n  backdrop-filter: blur(10px);\n}\n\n.close-btn:hover {\n  transform: translateY(-2px);\n  background: rgba(255, 255, 255, 0.4);\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);\n}\n</style>\n","// Сервис для сохранения эмоций через JSON сервер\nclass JsonStorageService {\n  constructor() {\n    // Используем localhost для разработки, сервер для продакшена\n    this.apiUrl = process.env.NODE_ENV === 'development' \n      ? 'http://localhost:3001/api' \n      : 'https://ikiteam.ru/api';\n    this.userId = null;\n  }\n\n  // Функция для получения API URL\n  getApiUrl() {\n    return this.apiUrl;\n  }\n\n  // Сохранение эмоции пользователя\n  async saveEmotion(telegramId, { emotion, note, timestamp, username }) {\n    try {\n      const apiUrl = this.getApiUrl();\n      console.log('Отправляем запрос на сервер:', `${apiUrl}/emotions`);\n      console.log('Данные:', { telegramId, emotion, note, timestamp, username });\n      \n      const response = await fetch(`${apiUrl}/emotions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ telegramId, emotion, note, timestamp, username })\n      });\n\n      console.log('Получен ответ от сервера:', response.status, response.statusText);\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Ошибка сервера:', errorData);\n        throw new Error(errorData.error || `Ошибка сохранения эмоции (${response.status})`);\n      }\n\n      const result = await response.json();\n      console.log('Эмоция успешно сохранена на сервере:', result);\n      return result;\n    } catch (error) {\n      console.error('Ошибка сохранения эмоции:', error);\n      if (error.name === 'TypeError' && error.message.includes('fetch')) {\n        throw new Error('Ошибка подключения к серверу. Проверьте интернет-соединение.');\n      }\n      throw error;\n    }\n  }\n\n  // Получение эмоций пользователя за период\n  async getUserEmotions(telegramId, startDate, endDate) {\n    try {\n      const apiUrl = this.getApiUrl();\n      const params = new URLSearchParams({\n        telegramId: String(telegramId),\n        startDate: startDate.toISOString(),\n        endDate: endDate.toISOString()\n      });\n\n      const response = await fetch(`${apiUrl}/emotions?${params}`);\n      \n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Ошибка получения эмоций');\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Ошибка получения эмоций:', error);\n      throw error;\n    }\n  }\n\n  // Получение эмоции на конкретную дату\n  async getEmotionByDate(telegramId, date) {\n    try {\n      const apiUrl = this.getApiUrl();\n      const dateStr = new Date(date).toISOString().split('T')[0];\n      const response = await fetch(`${apiUrl}/emotions/${telegramId}/${dateStr}`);\n      \n      if (!response.ok) {\n        if (response.status === 404) {\n          return null;\n        }\n        const error = await response.json();\n        throw new Error(error.error || 'Ошибка получения эмоции');\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Ошибка получения эмоции по дате:', error);\n      return null;\n    }\n  }\n\n  // Проверка, была ли уже сохранена эмоция на сегодня\n  async hasEmotionToday(telegramId) {\n    try {\n      const apiUrl = this.getApiUrl();\n      const response = await fetch(`${apiUrl}/emotions/today/${telegramId}`);\n      \n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Ошибка проверки эмоции');\n      }\n\n      const result = await response.json();\n      return result.hasEmotion;\n    } catch (error) {\n      console.error('Ошибка проверки эмоции на сегодня:', error);\n      return false;\n    }\n  }\n\n  // Обновление заметки к эмоции\n  async updateNote(telegramId, date, note) {\n    try {\n      const apiUrl = this.getApiUrl();\n      const response = await fetch(`${apiUrl}/emotions/note`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ telegramId, date, note })\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Ошибка обновления заметки');\n      }\n\n      const result = await response.json();\n      console.log('Заметка успешно обновлена на сервере:', result);\n      return result;\n    } catch (error) {\n      console.error('Ошибка обновления заметки:', error);\n      throw error;\n    }\n  }\n\n  // Получение статистики эмоций\n  async getEmotionStats(telegramId, startDate, endDate) {\n    try {\n      const apiUrl = this.getApiUrl();\n      const params = new URLSearchParams({\n        startDate: startDate.toISOString(),\n        endDate: endDate.toISOString()\n      });\n\n      const response = await fetch(`${apiUrl}/emotions/stats/${telegramId}?${params}`);\n      \n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Ошибка получения статистики');\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Ошибка получения статистики:', error);\n      throw error;\n    }\n  }\n\n  // Экспорт данных пользователя\n  async exportUserData(telegramId) {\n    try {\n      const apiUrl = this.getApiUrl();\n      const response = await fetch(`${apiUrl}/export/${telegramId}`);\n      \n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Ошибка экспорта данных');\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Ошибка экспорта данных:', error);\n      throw error;\n    }\n  }\n\n  // Импорт данных пользователя\n  async importUserData(telegramId, data) {\n    try {\n      const apiUrl = this.getApiUrl();\n      const response = await fetch(`${apiUrl}/import/${telegramId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Ошибка импорта данных');\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Ошибка импорта данных:', error);\n      throw error;\n    }\n  }\n\n  // Сохранение мысли/записи\n  async saveThought(telegramId, thought, date = null) {\n    try {\n      const apiUrl = this.getApiUrl();\n      const response = await fetch(`${apiUrl}/thoughts`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \n          telegramId, \n          thought, \n          date,\n          timestamp: new Date().toISOString()\n        })\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Ошибка сохранения мысли');\n      }\n\n      const result = await response.json();\n      console.log('Мысль успешно сохранена:', result);\n      return result;\n    } catch (error) {\n      console.error('Ошибка сохранения мысли:', error);\n      throw error;\n    }\n  }\n\n  // Получение мыслей за период\n  async getUserThoughts(telegramId, startDate, endDate) {\n    try {\n      const apiUrl = this.getApiUrl();\n      const params = new URLSearchParams({\n        telegramId: String(telegramId),\n        startDate: startDate.toISOString(),\n        endDate: endDate.toISOString()\n      });\n\n      const response = await fetch(`${apiUrl}/thoughts?${params}`);\n      \n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Ошибка получения мыслей');\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Ошибка получения мыслей:', error);\n      throw error;\n    }\n  }\n\n  // Получение мыслей на конкретную дату\n  async getThoughtsByDate(telegramId, date) {\n    try {\n      const apiUrl = this.getApiUrl();\n      const dateStr = new Date(date).toISOString().split('T')[0];\n      const response = await fetch(`${apiUrl}/thoughts/${telegramId}/${dateStr}`);\n      \n      if (!response.ok) {\n        if (response.status === 404) {\n          return [];\n        }\n        const error = await response.json();\n        throw new Error(error.error || 'Ошибка получения мыслей');\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Ошибка получения мыслей по дате:', error);\n      return [];\n    }\n  }\n}\n\nexport const jsonStorageService = new JsonStorageService(); ","export const telegram = window.Telegram?.WebApp;\n\nexport const isTelegram = () => {\n  return Boolean(window.Telegram?.WebApp);\n};\n\nexport const getTelegramUserId = () => {\n  return telegram?.initDataUnsafe?.user?.id;\n};\n\nexport const initTelegram = () => {\n  if (telegram) {\n    telegram.ready();\n    telegram.expand();\n  }\n};\n","import { render } from \"./EmotionSelect.vue?vue&type=template&id=2cdd8360&scoped=true\"\nimport script from \"./EmotionSelect.vue?vue&type=script&lang=js\"\nexport * from \"./EmotionSelect.vue?vue&type=script&lang=js\"\n\nimport \"./EmotionSelect.vue?vue&type=style&index=0&id=2cdd8360&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2cdd8360\"]])\n\nexport default __exports__","<template>\n  <div class=\"main-screen\">\n    <div class=\"user-login\" v-if=\"username\">\n      Привет, @{{ username }}!\n    </div>\n    <button class=\"settings-btn\" @click=\"$emit('open-settings')\">\n      <!-- <img src=\"../assets/settings.svg\" alt=\"Настройки\" /> -->\n    </button>\n    <div class=\"glass-container\">\n      <span class=\"soul-text\">\n        Ты не ты, когда<br>голоден\n      </span>\n    </div>\n    <div class=\"soul-image\">\n      <img src=\"../assets/soul.png\" alt=\"Soul\" />\n    </div>\n    <div class=\"buttons-row\">\n      <button class=\"btn calendar\" @click=\"$emit('open-calendar')\">\n        Календарь настроения\n      </button>\n      <button class=\"btn stories\" disabled>\n        Скоро тут будут истории\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { dbService } from '../services/dbService'\nimport { getTelegramUserId } from '../utils/telegram'\n\nexport default {\n  name: 'MainScreen',\n  data() {\n    return {\n      username: null\n    }\n  },\n  async mounted() {\n    const telegramId = getTelegramUserId()\n    if (telegramId) {\n      try {\n        const user = await dbService.getUser(telegramId)\n        if (user && user.login) {\n          this.username = user.login\n        }\n      } catch (e) {\n        console.error('Ошибка получения логина:', e)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.main-screen {\n  min-height: 100vh;\n  /* padding: 4vw 2vw; */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: radial-gradient(48.34% 48.34% at 50% 51.66%, #DAF8FF 29.33%, #F2C0FF 75%, #FB8DFF 100%);\n  flex-wrap: nowrap;\n  justify-content: space-evenly;\n}\n\n.glass-container{\n  background: rgba(255, 255, 255, 0.2);\n  backdrop-filter: blur(20px);\n  border-radius: 24px;\n  padding: 40px;\n  position: absolute;\n  top: 60px;\n}\n\n/* .main-screen {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px;\n  position: relative;\n} */\n\n.settings-btn {\n  position: absolute;\n  top: 24px;\n  right: 24px;\n  background: none;\n  border: none;\n  cursor: pointer;\n  z-index: 2;\n  width: 40px;\n  height: 40px;\n  padding: 0;\n}\n\n.settings-btn img {\n  width: 32px;\n  height: 32px;\n}\n\n.soul-image {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.soul-image img {\n  width: 80vw;\n  /* max-width: 240px;\n  min-width: 120px; */\n  height: auto;\n}\n\n.buttons-row {\n  /* width: 100%; */\n  display: flex;\n  flex-direction: row;\n  gap: 4vw;\n  justify-content: center;\n  margin-top: 6vw;\n  flex-wrap: nowrap;\n  margin: 20px;\n  position: absolute;\n  bottom: 80px;\n}\n\n.btn {\n  padding: 3vw 6vw;\n  min-width: 120px;\n  font-size: 4vw;\n  border: none;\n  border-radius: 20px;\n}\n\n.calendar {\n  background: #FF7DBB;\n  color: black;\n  /* border: none!important;\n  border-radius: 20px; */\n}\n\n.btn:disabled {\n  opacity: 0.7;\n  cursor: not-allowed;\n}\n\n.user-login {\n  margin-top: 12px;\n  font-size: 18px;\n  color: #333;\n  font-family: 'Mulish', sans-serif;\n  font-weight: 500;\n}\n\n@media (max-width: 600px) {\n  /* .main-screen {\n    padding: 6vw 2vw;\n  } */\n  /* .soul-image img {\n    width: 60vw;\n    max-width: 180px;\n  } */\n  /* .btn {\n    font-size: 5vw;\n    min-width: 100px;\n  } */\n}\n</style>\n","// src/services/firebase.js\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\n// ЭТО НЕ СЕКРЕТНЫЙ JSON!\n// Это публичные настройки из Firebase console\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA45HVlArfrCX12RzClqX8yvPWQDjx97iM\",\n  authDomain: \"iki-nowels.firebaseapp.com\",\n  projectId: \"iki-nowels\",\n  storageBucket: \"iki-nowels.firebasestorage.app\",\n  messagingSenderId: \"1064173724655\",\n  appId: \"1:1064173724655:web:7292b8b03bf0fe7708cc1a\",\n  measurementId: \"G-MZD8G11D0Y\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\nexport { db };\n","import { db } from  './firebase'; // Предполагается, что вы используете Firebase для хранения данных\n\nconst API_URL =  'https://ikiteam.ru/api';\n\nexport const dbService = {\n  // Создание или обновление пользователя\n  async saveUser(telegramId) {\n    try {\n      const response = await fetch(`${API_URL}/users`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ telegramId })\n      });\n      return response.json();\n    } catch (error) {\n      console.error('Error saving user:', error);\n      throw error;\n    }\n  },\n\n  // Сохранение эмоции\n  async saveEmotion(telegramId, { emotion, note, timestamp }) {\n    return fetch(`${API_URL}/emotions`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ telegramId, emotion, note, timestamp })\n    });\n  },\n\n  // Получение эмоций пользователя\n  async getUserEmotions(telegramId, startDate, endDate) {\n    const params = new URLSearchParams({\n      telegramId,\n      startDate: startDate.toISOString(),\n      endDate: endDate.toISOString()\n    })\n    const response = await fetch(`${API_URL}/emotions?${params}`)\n    return await response.json()\n  },\n\n  // Получение пользователя\n  async getUser(telegramId) {\n    const response = await fetch(`${API_URL}/users/${telegramId}`);\n    if (!response.ok) throw new Error('User not found');\n    return await response.json();\n  },\n\n  async saveEmotion(telegramId, data) {\n    // Сохраняем эмоцию в подколлекцию \"emotions\" пользователя\n    await db.collection('users')\n      .doc(String(telegramId))\n      .collection('emotions')\n      .add(data)\n  }\n};\n","import { render } from \"./MainScreen.vue?vue&type=template&id=5a4b4d91&scoped=true\"\nimport script from \"./MainScreen.vue?vue&type=script&lang=js\"\nexport * from \"./MainScreen.vue?vue&type=script&lang=js\"\n\nimport \"./MainScreen.vue?vue&type=style&index=0&id=5a4b4d91&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5a4b4d91\"]])\n\nexport default __exports__","<template>\n  <div class=\"calendar-screen\" @click=\"blurInput\">\n    <button class=\"back-btn\" @click=\"$emit('back')\">Назад</button>\n    <div class=\"calendar-header\">\n      <button class=\"nav-btn\" @click=\"prevMonth\" :disabled=\"isMinMonth\">&lt;</button>\n      <span class=\"month-title\">{{ monthName }} {{ currentYear }}</span>\n      <button class=\"nav-btn\" @click=\"nextMonth\" :disabled=\"isMaxMonth\">&gt;</button>\n    </div>\n    <div class=\"calendar-grid\">\n      <div class=\"calendar-day calendar-day-header\" v-for=\"day in weekDays\" :key=\"day\">{{ day }}</div>\n      <div\n        v-for=\"n in firstDayOfWeek\"\n        :key=\"'empty-' + n\"\n        class=\"calendar-day empty\"\n      ></div>\n      <div\n        v-for=\"day in daysInMonth\"\n        :key=\"day\"\n        class=\"calendar-day\"\n      >\n        {{ day }}\n      </div>\n    </div>\n    <div class=\"note-container\" @click.stop>\n      <textarea\n        class=\"note-input\"\n        v-model=\"note\"\n        placeholder=\"Напишешь пару слов о сегодняшнем дне?\"\n        rows=\"3\"\n        ref=\"noteInput\"\n        @blur=\"onBlur\"\n      ></textarea>\n    </div>\n  </div>\n</template>\n\n<script>\nconst START_YEAR = 2025\nconst START_MONTH = 5 // июнь (0-январь, 5-июнь)\nconst START_DAY = 1\n\nexport default {\n  name: 'CalendarScreen',\n  data() {\n    const today = new Date()\n    const minMonth = START_MONTH\n    const minYear = START_YEAR\n    const maxMonth = today.getMonth()\n    const maxYear = today.getFullYear()\n    return {\n      currentMonth: maxMonth,\n      currentYear: maxYear,\n      minMonth,\n      minYear,\n      weekDays: ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'],\n      note: '',\n      isInputFocused: false\n    }\n  },\n  computed: {\n    monthName() {\n      return [\n        'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь',\n        'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'\n      ][this.currentMonth]\n    },\n    daysInMonth() {\n      const days = new Date(this.currentYear, this.currentMonth + 1, 0).getDate()\n      // Если выбран июнь 2025, начинаем с 1 числа\n      if (this.currentYear === START_YEAR && this.currentMonth === START_MONTH) {\n        return Array.from({ length: days - START_DAY + 1 }, (_, i) => i + START_DAY)\n      }\n      return Array.from({ length: days }, (_, i) => i + 1)\n    },\n    firstDayOfWeek() {\n      // Определяем день недели первого дня месяца (Пн=0, Вс=6)\n      let first = new Date(this.currentYear, this.currentMonth, \n        (this.currentYear === START_YEAR && this.currentMonth === START_MONTH) ? START_DAY : 1\n      ).getDay()\n      first = (first + 6) % 7 // Переводим так, чтобы Пн=0\n      return first\n    },\n    isMinMonth() {\n      return this.currentYear === this.minYear && this.currentMonth === this.minMonth\n    },\n    isMaxMonth() {\n      const today = new Date()\n      return this.currentYear === today.getFullYear() && this.currentMonth === today.getMonth()\n    }\n  },\n  methods: {\n    prevMonth() {\n      if (this.isMinMonth) return\n      if (this.currentMonth === 0) {\n        this.currentMonth = 11\n        this.currentYear--\n      } else {\n        this.currentMonth--\n      }\n    },\n    nextMonth() {\n      if (this.isMaxMonth) return\n      if (this.currentMonth === 11) {\n        this.currentMonth = 0\n        this.currentYear++\n      } else {\n        this.currentMonth++\n      }\n    },\n    blurInput() {\n      if (this.isInputFocused) {\n        this.$refs.noteInput.blur();\n      }\n    },\n    onBlur() {\n      this.isInputFocused = false;\n    }\n  },\n  watch: {\n    note() {\n      // Можно добавить автоскролл к textarea при вводе, если нужно\n    }\n  }\n}\n</script>\n\n<style scoped>\n.calendar-screen {\n  width: -webkit-fill-available;\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  background: radial-gradient(48.34% 48.34% at 50% 51.66%, #DAF8FF 29.33%, #F2C0FF 75%, #FB8DFF 100%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  overflow: hidden; /* запретить скролл всей странице */\n}\n.back-btn {\n  align-self: flex-start;\n  margin-left: 24px;\n  margin-bottom: 24px;\n  padding: 10px 20px;\n  border-radius: 8px;\n  border: none;\n  background: #fff;\n  font-size: 16px;\n  cursor: pointer;\n}\n.calendar-header {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  margin-bottom: 24px;\n}\n.month-title {\n  font-size: 24px;\n  font-weight: 600;\n  font-family: 'Mulish', sans-serif;\n}\n.nav-btn {\n  background: #fff;\n  border: none;\n  border-radius: 8px;\n  font-size: 20px;\n  width: 36px;\n  height: 36px;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n.nav-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n.calendar-grid {\n  display: grid;\n  grid-template-columns: repeat(7, 40px);\n  gap: 8px;\n  background: rgba(255,255,255,0.2);\n  border-radius: 18px;\n  padding: 24px;\n  box-shadow: 0 4px 16px rgba(0,0,0,0.07);\n}\n.calendar-day {\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: 'Mulish', sans-serif;\n  font-size: 16px;\n  color: #333;\n  background: rgba(255,255,255,0.7);\n  border-radius: 8px;\n}\n.calendar-day-header {\n  background: none;\n  font-weight: bold;\n  color: #444;\n}\n.empty {\n  background: none;\n  pointer-events: none;\n}\n.note-container {\n  margin-top: 32px;\n  width: 90%;\n  max-width: 400px;\n  min-height: 60px;\n  border-radius: 12px;\n  background: rgba(255,255,255,0.7);\n  box-shadow: 0 2px 8px rgba(0,0,0,0.06);\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  position: relative;\n  z-index: 2;\n}\n\n.note-input {\n  width: 100%;\n  border: none;\n  border-radius: 12px;\n  padding: 16px;\n  font-size: 16px;\n  font-family: 'Mulish', sans-serif;\n  background: transparent;\n  resize: none;\n  outline: none;\n}\n</style>","import { render } from \"./CalendarScreen.vue?vue&type=template&id=d0d29410&scoped=true\"\nimport script from \"./CalendarScreen.vue?vue&type=script&lang=js\"\nexport * from \"./CalendarScreen.vue?vue&type=script&lang=js\"\n\nimport \"./CalendarScreen.vue?vue&type=style&index=0&id=d0d29410&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d0d29410\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=e6001a4e\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=e6001a4e&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb_novels\"] = self[\"webpackChunkweb_novels\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], () => (__webpack_require__(473)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","_createElementBlock","_hoisted_1","$data","currentScreen","_createBlock","_component_LoadingScreen","key","_component_EmotionSelect","onEmotionSelected","$options","handleEmotionSelect","onNavigate","handleNavigate","_component_MainScreen","onOpenSettings","openSettings","onOpenCalendar","openCalendar","_component_CalendarScreen","onBack","backToMain","class","_cache","_createElementVNode","src","_imports_0","alt","name","__exports__","emotionAlreadySelected","_hoisted_8","_hoisted_9","_hoisted_10","getSelectedEmotionIcon","getSelectedEmotionName","_hoisted_12","_toDisplayString","_hoisted_13","onClick","args","goToCalendar","goToMain","_hoisted_2","isLoading","_hoisted_3","_hoisted_4","_Fragment","_renderList","emotions","emotion","_normalizeClass","$event","selectEmotion","icon","_hoisted_7","JsonStorageService","constructor","this","apiUrl","userId","getApiUrl","saveEmotion","telegramId","note","timestamp","username","console","log","response","fetch","method","headers","body","JSON","stringify","status","statusText","ok","errorData","json","error","Error","result","message","includes","getUserEmotions","startDate","endDate","params","URLSearchParams","String","toISOString","getEmotionByDate","date","dateStr","Date","split","hasEmotionToday","hasEmotion","updateNote","getEmotionStats","exportUserData","importUserData","data","saveThought","thought","getUserThoughts","getThoughtsByDate","jsonStorageService","telegram","window","Telegram","WebApp","getTelegramUserId","initDataUnsafe","user","telegramUsername","selectedEmotion","require","mounted","getTelegramUsername","warn","now","today","methods","first_name","emotionData","$emit","stack","alert","find","e","_ctx","disabled","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","db","getFirestore","API_URL","dbService","saveUser","getUser","collection","doc","add","login","blurInput","prevMonth","isMinMonth","monthName","currentYear","nextMonth","isMaxMonth","_hoisted_5","weekDays","day","firstDayOfWeek","n","daysInMonth","_withModifiers","placeholder","rows","ref","onBlur","START_YEAR","START_MONTH","START_DAY","minMonth","minYear","maxMonth","getMonth","maxYear","getFullYear","currentMonth","isInputFocused","computed","days","getDate","Array","from","length","_","i","first","getDay","$refs","noteInput","blur","watch","components","LoadingScreen","EmotionSelect","MainScreen","CalendarScreen","showSettings","emotionId","screen","setTimeout","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","call","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}